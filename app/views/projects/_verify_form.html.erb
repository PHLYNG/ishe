<script type="text/javascript">
$(document).ready(function() {
  //change label to name of file/image that will be uploaded
  $(".original-in").change(function() {
    // resize label to fit filename/path
    $('#original').html($(this).val());
    var size = $(this).val().length;
    $("#original").css('width', size*10)
  });
  $(".verify-in").change(function() {
    // resize label to fit filename/path
    $('#verify').html($(this).val());
    var size = $(this).val().length;
    $("#verify").css('width', size*10)
  });
});
</script>

<%= form_for @project, url: project_path, html: {multipart: true, class: "form-group"} do |f| %>

  <h4>GPS Coordinates</h4>

  <%= button_tag 'Get Location', type: 'button', onclick: 'getLocation()', id: "gps-button", class: "btn btn-primary" %>

  <%= f.label :street1,"Latitude", class: 'new-streets new-streets-label'  %>
  <%= f.text_field :street1, class: 'form-control new-streets new-streets-field', id: "lat-field", value: '' %>
  <br>
  <%= f.label :street2,"Longitude", class: 'new-streets new-streets-label' %>
  <%= f.text_field :street2, class: 'form-control new-streets new-streets-field', id: "long-field", value: ''  %>

  <h4>Upload an Image</h4>

  <%= f.label :photo, "Original Photo: #{@project.photo_file_name}", class: 'form-control image-label', id: 'original', :readonly => true %>
  <%= f.file_field :photo, class: 'form-control original-in', :readonly => true, id: "break" %>

  <%= f.label :verify_photo, "Photo for Verification", class: 'form-control image-label', id: "verify" %>
  <%= f.file_field :verify_photo, class: 'form-control verify-in' %>

  <button class="btn btn-success" id="verify-submit" data-verify="<%= @project.photo %>">
    <%= f.submit 'Verify Project' %>
  </button>

<% end %> <!-- End of form helper -->

<!-- get file path for resemble js through javascript only - use value of original input field and value of change -->
<!-- <script type="text/javascript">
const photo_before = "<%# @project.photo %>"
var photo_after;
console.log("before" + photo_before);
// function getNewPhoto() {
//   return
// }
// $("#verify-submit").on('click', function() {
$('form').on('submit', function() {
  // const photo_after = "<%# params[:project][:photo] %>"
  // const photo_after = getNewPhoto()
  photo_after = "<%# @project.photo %>"
  debugger;
  var diff = resemble(photo_before).compareTo(photo_after).ignoreColors().scaleToSameSize().onComplete(function(data) {
  console.log(data);
  console.log("before" + photo_before, "after" + photo_after);
  // $('form').submit()
  });
});
</script> -->

<script type="text/javascript">
// geolocation for streets, city, state
var lat = document.getElementById("lat-field");
var long = document.getElementById("long-field");
var fail = document.getElementById("gps-fail");

function getLocation() {
  if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(showPosition, geolocationError,
        {
          enableHighAccuracy: true
        });
      }
  else {
      fail.innerHTML = "Geolocation is not supported by this browser.";
    }
  }
  function showPosition(position) {
    console.log(position);
    lat.value = position.coords.latitude
    long.value = position.coords.longitude;
  }
  function geolocationError(error) {
    switch(error.code) {
      case error.PERMISSION_DENIED:
        fail.innerHTML = "User denied the request for Geolocation."
        break;
      case error.POSITION_UNAVAILABLE:
        fail.innerHTML = "Location information is unavailable."
        break;
      case error.TIMEOUT:
        fail.innerHTML = "The request to get user location timed out."
        break;
      case error.UNKNOWN_ERROR:
        fail.innerHTML = "An unknown error occurred."
        break;
      }
    }
</script>

<% console %>
